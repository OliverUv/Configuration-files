extends rust
priority 15

snippet prel "Use prelude"
use ${1}::prelude::*;${0}
endsnippet

snippet ma "match pattern"
match ${VISUAL}${1} {
	${2:_} => ${3},
}${0}
endsnippet

snippet ec "Empty case clause of pattern match" b
_ => {},${0}
endsnippet

snippet c "Case clause of pattern match" b
${1:_} => ${2:expression}
endsnippet

snippet p "Property of struct" w
${1:_}: ${2:prop},${0}
endsnippet

snippet for "for ... in ... loop"
for ${1:i} in ${2} {
	${VISUAL}${3}
}${0}
endsnippet

snippet sfn "fn name(&self, ?) -> ? {}"
fn ${1:function_name}(&self, $2)${3/..*/ ->/}$3 {
	${VISUAL}$0
}
endsnippet

snippet msfn "fn name(&mut self, ?) -> ? {}"
fn ${1:function_name}(&mut self, $2)${3/..*/ ->/}$3 {
	${VISUAL}$0
}
endsnippet

snippet dt "doctest" b
/// \`\`\`rust
/// $0
/// \`\`\`
endsnippet

snippet adt "async doctest" b
/// \`\`\`rust
/// tokio_test::block_on(async {
///     $0
/// })
/// \`\`\`
endsnippet

snippet ttest "tokio test" b
#[tokio::test()]
async fn ${1:async_test}() {
	$0
}
endsnippet

snippet test "test case" b
#[test]
fn ${1:test}() {
	${VISUAL}${2}
}${0}
endsnippet
